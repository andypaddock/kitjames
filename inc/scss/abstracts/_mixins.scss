@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}
@mixin normMargin {
  margin: 5rem 0;
}
@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
@mixin absCenter75 {
  position: absolute;
  top: 75%;
  left: 50%;
  transform: translate(-50%, -50%);
}
@mixin overCenter {
  position: relative;
  left: 50%;
  transform: translate(-50%, -80%);
}
@mixin backgroundCover {
  background-size: cover !important; /* !important added as result of rule not working inside display:grid */
  background-position: center center !important;
  background-repeat: no-repeat !important;
}
@mixin psuedoElement {
  content: "";
  position: absolute;
}
// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + :      Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components

1em = 16px
*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      @content;
    } //600px
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {
      @content;
    } //900px
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      @content;
    } //1200px
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) {
      @content;
    } //1800
  }
}

@mixin animation($delay, $duration, $animation) {
  -webkit-animation-delay: $delay;
  -webkit-animation-duration: $duration;
  -webkit-animation-name: $animation;
  -webkit-animation-fill-mode: forwards;

  -moz-animation-delay: $delay;
  -moz-animation-duration: $duration;
  -moz-animation-name: $animation;
  -moz-animation-fill-mode: forwards;

  -o-animation-delay: $delay;
  -o-animation-duration: $duration;
  -o-animation-name: $animation;
  -o-animation-fill-mode: forwards;

  animation-delay: $delay;
  animation-duration: $duration;
  animation-name: $animation;
  animation-fill-mode: forwards;
}

@mixin breakpoint($point) {
  @if $point == big {
    @media screen and (max-width: 1600px) {
      @content;
    }
  } @else if $point == medium {
    @media screen and (max-width: 900px) {
      @content;
    }
  } @else if $point == small {
    @media screen and (max-width: 600px) {
      @content;
    }
  }
}
